{
  "basic_usage": {
    "description": "การใช้งานพื้นฐานกับ dataset",
    "code": "\nimport json\nfrom anthropic import Anthropic\n\n# โหลด dataset\nwith open('data/train.jsonl', 'r') as f:\n    dataset = [json.loads(line) for line in f]\n\n# ตั้งค่า Claude\nclient = Anthropic(api_key=\"your-api-key\")\n\n# ตัวอย่างการใช้งาน\nfor item in dataset[:5]:\n    instruction = item['input']\n    expected = item['output']\n    \n    response = client.messages.create(\n        model=\"claude-3-5-sonnet-20241022\",\n        max_tokens=1024,\n        messages=[{\"role\": \"user\", \"content\": instruction}]\n    )\n    \n    print(f\"Instruction: {instruction}\")\n    print(f\"Expected: {expected}\")\n    print(f\"Claude: {response.content[0].text}\")\n    print(\"-\" * 50)\n"
  },
  "batch_processing": {
    "description": "ประมวลผลแบบ batch",
    "code": "\nimport json\nimport time\nfrom anthropic import Anthropic\n\ndef process_batch(dataset, batch_size=10):\n    client = Anthropic(api_key=\"your-api-key\")\n    results = []\n    \n    for i in range(0, len(dataset), batch_size):\n        batch = dataset[i:i+batch_size]\n        batch_results = []\n        \n        for item in batch:\n            try:\n                response = client.messages.create(\n                    model=\"claude-3-5-sonnet-20241022\",\n                    max_tokens=1024,\n                    messages=[{\"role\": \"user\", \"content\": item['input']}]\n                )\n                \n                batch_results.append({\n                    'id': item['id'],\n                    'input': item['input'],\n                    'expected': item['output'],\n                    'response': response.content[0].text,\n                    'timestamp': time.time()\n                })\n                \n            except Exception as e:\n                print(f\"Error processing {item['id']}: {e}\")\n        \n        results.extend(batch_results)\n        time.sleep(1)  # Rate limiting\n    \n    return results\n\n# ใช้งาน\nwith open('data/test.jsonl', 'r') as f:\n    test_data = [json.loads(line) for line in f]\n\nresponses = process_batch(test_data)\n\n# บันทึกผลลัพธ์\nwith open('claude_responses.jsonl', 'w') as f:\n    for response in responses:\n        f.write(json.dumps(response) + '\\n')\n"
  }
}